# version: 2.1

# orbs:
#   python: circleci/python@1.0.0

# jobs:
#   custom_python_test:
#     docker:
#       - image: circleci/python:3.8  # Or any appropriate Python version
#     parallelism: 4  # Add parallelism to split the job into 4 parallel containers
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: pipenv
#           args: --dev
#       - run:
#           name: Run tests in parallel using pytest
#           command: |
#             pipenv run pytest --maxfail=1 --disable-warnings --junitxml=results.xml \
#               $(circleci tests split --split-by=timings)
#       - store_test_results:
#           path: results.xml
#       - store_artifacts:
#           path: test/test/report.html

# workflows:
#   main:
#     jobs:
#       - custom_python_test


version: 2.1

orbs:
  python: circleci/python@1.0.0

jobs:
  build:
    docker:
      - image: cimg/python:3.12.0
    parallelism: 4
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pipenv install --dev
      - run:
          name: Run tests
          command: |
            circleci tests glob "**/test/*.py" | circleci tests run --command=">files.txt xargs echo" --verbose --split-by=timings
            cat files.txt | tr "/" "." | sed "s/\.py//g" | sed "s/tests\.//g" > circleci_test_files.txt
            TESTFILES=$(cat circleci_test_files.txt)
            pipenv run coverage run manage.py test --parallel=8 --verbosity=2 $TESTFILES
      - store_test_results:
          path: test-results

workflows:
  main:
    jobs:
      - build
